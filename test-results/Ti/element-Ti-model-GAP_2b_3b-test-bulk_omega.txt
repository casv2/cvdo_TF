Model GAP_2b_3b, Test bulk_omega
Test run at 2018-09-03 19:46

model file: ../../../models/Ti/GAP_2b_3b/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2018_5_29_60_13_48_53_535"',
                                               param_filename='gp_2b_3b.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2018_5_29_60_13_48_53_535"',
                                               param_filename='gp_2b_3b.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Ti/bulk_omega/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.hexagonal import HexagonalClosedPacked
from math import sqrt

import numpy as np
import lattice_tetragonal

# the current model
import model 

#c_over_a = 1.8
#a0 = (16.0*2*2/sqrt(3.0)/c_over_a)**(1.0/3.0)# initial guess at lattice constant, cell will be relaxed below

#c_over_a = 1.588
#a0 = 2.95

def create_omega_custom(c_vs_a, a, z):
   import quippy

   #a = (2 * V / (3.0**(0.5) * c_vs_a))**(1.0/3.0)
   c = c_vs_a * a

   lattice = []
   lattice.append([3.0**(0.5) /2.0 * a,-a/2.0,0])
   lattice.append([3.0**(0.5) /2.0 * a, a/2.0,0])
   lattice.append([0,0,c])
   lattice = np.transpose(lattice)
   unitcell = quippy.Atoms(n=0, lattice=lattice)

   pos = []
   pos.append([3.0**(0.5) /6.0 * a,0,0.0])
   pos.append([3.0**(0.5) /2.0 * a,0,c/2.0])
   pos.append([3.0**(0.5) * 5.0/6.0 * a,0,c/2.0])

   for i in range(0,len(pos)):
      unitcell.add_atoms(pos[i],z)

   return unitcell

# set up the a
#bulk = HexagonalClosedPacked(symbol='Ti', latticeconstant=(a0,a0*c_over_a))

c_vs_a = 0.610
a = 4.630

bulk = create_omega_custom(c_vs_a, a, 22)

(c11, c33, c12, c13, c44, c66, E_vs_V) = lattice_tetragonal.do_lattice(bulk, elastic=True)#, tol=1.0e-2)

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
#properties = {'hcp_E_vs_V': E_vs_V }

properties = {'omega_c11': c11, 'omega_c33': c33, 'omega_c12': c12, 'omega_c13': c13, 'omega_c44': c44, 'omega_c66': c66, 'omega_E_vs_V': E_vs_V }
============================================================
unrelaxed bulk
3
Lattice="4.00969761952195 -2.315 0.0 4.00969761952195 2.315 0.0 0.0 0.0 2.8243" Properties=species:S:1:pos:R:3:Z:I:1 pbc="T T T"
Ti       1.33656587       0.00000000       0.00000000       22 
Ti       4.00969762       0.00000000       1.41215000       22 
Ti       6.68282937       0.00000000       1.41215000       22 
relax_atoms_cell using method lbfgs_precon
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
PreconLBFGS:   0  19:46:21      -18.169382       0.0000       0.0146
{'_fpointer': array([857239040,     32754], dtype=int32), '_ase_arrays': {'force': array([[-6.81746326e-15,  5.20417043e-17, -1.63931368e-16],
       [ 1.93872696e-14,  6.59194921e-17, -1.38777878e-17],
       [-1.25229688e-14, -1.14491749e-16,  4.16333634e-17]]), 'positions': array([[1.33656587, 0.        , 0.        ],
       [4.00969762, 0.        , 1.41215   ],
       [6.68282937, 0.        , 1.41215   ]]), 'map_shift': array([[ 0,  0,  0],
       [-1, -1, -1],
       [-1, -1, -1]], dtype=int32), 'numbers': array([22, 22, 22], dtype=int32), 'n_neighb': array([70, 70, 70], dtype=int32), 'species': array([['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']], dtype='|S1')}, '_celldisp': array([[0.],
       [0.],
       [0.]]), 'hysteretic_neighbours': <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, '_update_hooks': [], '_calc': <utilities.SymmetrizedCalculator instance at 0x11a92d440>, 'neighbours': <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, '_subobjs_cache': {(857240752, 32754): <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, (857240280, 32754): <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, (857239264, 32754): Dictionary('Z="22 22 22" pos="1.3365658731739836 0.0 0.0 4.00969761952195 0.0 1.41215 6.682829365869917 0.0 1.41215" species="T i                 T i                 T i                " map_shift="0 0 0 -1 -1 -1 -1 -1 -1" n_neighb="70 70 70" force="-6.817463260588852e-15 5.204170427930421e-17 -1.6393136847980827e-16 1.9387269567516796e-14 6.591949208711867e-17 -1.3877787807814457e-17 -1.252296877307657e-14 -1.1449174941446927e-16 4.163336342344337e-17"'), (857239376, 32754): Dictionary('virial="0.45599192349114925 -1.5785983631388945e-16 1.97758476261356e-16 -2.5326962749261384e-16 0.4559919234905291 -1.1449174941446927e-16 3.0986546151602783e-17 -6.705573596388353e-17 -0.767125004974164" energy=-18.1693824172')}, '_initialised': True, '_constraints': [], '_finalise': True}
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.00 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=2.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=4.24 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): got r_NN=2.824 in 0.00128698348999 s
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.00021505355835 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 9.51290130615e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 4.19616699219e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000563859939575 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000610113143921 s ---
INFO:ase.optimize.precon:mu (0.000) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=21.278438708707146
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000226974487305 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 8.89301300049e-05 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 3.50475311279e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 3.00407409668e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000312089920044 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00046706199646 s ---
INFO:ase.optimize.precon:--- Precon created in 0.0016040802002 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000182151794434 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   1  19:46:21      -18.174126       0.0000       0.0123
{'_fpointer': array([857239040,     32754], dtype=int32), '_ase_arrays': {'force': array([[ 6.32480179e-15, -1.38777878e-16, -4.68375339e-17],
       [-4.74342787e-14, -5.55111512e-17, -4.85722573e-17],
       [ 4.11597839e-14, -1.12757026e-16, -2.77555756e-17]]), 'positions': array([[ 1.33974835e+00, -6.46178161e-69, -5.90210890e-34],
       [ 4.01924505e+00,  1.51851611e-35,  1.40649328e+00],
       [ 6.69874175e+00,  1.51851611e-35,  1.40649328e+00]]), 'map_shift': array([[ 0,  0,  0],
       [-1, -1, -1],
       [-1, -1, -1]], dtype=int32), 'numbers': array([22, 22, 22], dtype=int32), 'n_neighb': array([70, 70, 70], dtype=int32), 'species': array([['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']], dtype='|S1')}, '_celldisp': array([[0.],
       [0.],
       [0.]]), 'hysteretic_neighbours': <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, '_update_hooks': [], '_calc': <utilities.SymmetrizedCalculator instance at 0x11a92d440>, 'neighbours': <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, '_subobjs_cache': {(857240752, 32754): <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, (857240280, 32754): <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, (857239264, 32754): Dictionary('Z="22 22 22" pos="1.33974835000325 -6.46178160828501e-69 -5.902108897714281e-34 4.01924505000975 1.5185161068379358e-35 1.406493279752157 6.69874175001625 1.5185161068379358e-35 1.406493279752157" species="T i                 T i                 T i                " map_shift="0 0 0 -1 -1 -1 -1 -1 -1" n_neighb="70 70 70" force="6.324801793411439e-15 -1.3877787807814457e-16 -4.683753385137379e-17 -4.7434278727109813e-14 -5.551115123125783e-17 -4.85722573273506e-17 4.11597839145017e-14 -1.1275702593849246e-16 -2.7755575615628914e-17"'), (857239376, 32754): Dictionary('virial="0.346451878470704 2.1337098754514727e-16 -1.5612511283791264e-16 4.787836793695988e-16 0.34645187847003744 6.002143226879753e-16 -2.06274150710127e-16 1.350859651861748e-16 -0.6452833432120673" energy=-18.1741255859')}, '_initialised': True, '_constraints': [], '_finalise': True}
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000223159790039 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000116109848022 s ---
INFO:ase.optimize.precon:--- remove zeros in 3.50475311279e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00036096572876 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000479936599731 s ---
INFO:ase.optimize.precon:mu (-0.000) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=22.23953044105379
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000250816345215 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 8.79764556885e-05 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 2.90870666504e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 2.90870666504e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000300884246826 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000505924224854 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00164699554443 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000128984451294 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   2  19:46:21      -18.182973       0.0000       0.0017
{'_fpointer': array([857239040,     32754], dtype=int32), '_ase_arrays': {'force': array([[ 6.38378239e-16,  1.89084859e-16, -9.24173932e-15],
       [ 6.77582990e-15, -1.31838984e-16,  4.71844785e-15],
       [-7.32573724e-15,  9.97465999e-17,  4.31599201e-15]]), 'positions': array([[ 1.35254606e+00, -8.30890195e-46, -6.05529343e-34],
       [ 4.05763817e+00, -1.64903661e-31,  1.38129625e+00],
       [ 6.76273028e+00,  1.64940839e-31,  1.38129625e+00]]), 'map_shift': array([[ 0,  0,  0],
       [-1, -1, -1],
       [-1, -1, -1]], dtype=int32), 'numbers': array([22, 22, 22], dtype=int32), 'n_neighb': array([70, 70, 70], dtype=int32), 'species': array([['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']], dtype='|S1')}, '_celldisp': array([[0.],
       [0.],
       [0.]]), 'hysteretic_neighbours': <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, '_update_hooks': [], '_calc': <utilities.SymmetrizedCalculator instance at 0x11a92d440>, 'neighbours': <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, '_subobjs_cache': {(857240752, 32754): <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, (857240280, 32754): <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, (857239264, 32754): Dictionary('Z="22 22 22" pos="1.3525460554302864 -8.308901948203681e-46 -6.055293425197972e-34 4.057638166290859 -1.6490366088872276e-31 1.3812962484575082 6.762730277151432 1.6494083919803593e-31 1.3812962484575082" species="T i                 T i                 T i                " map_shift="0 0 0 -1 -1 -1 -1 -1 -1" n_neighb="70 70 70" force="6.38378239159465e-16 1.8908485888147197e-16 -9.24173931826644e-15 6.7758298971654085e-15 -1.3183898417423734e-16 4.718447854656915e-15 -7.325737239050056e-15 9.974659986866641e-17 4.315992008230296e-15"'), (857239376, 32754): Dictionary('virial="0.04825963269116518 3.469446951953614e-18 -1.9116652705264414e-15 5.238864897449957e-16 0.04825963269051414 -3.7470027081099033e-16 -2.0061003878989123e-15 3.770133542661681e-16 0.08938215562914315" energy=-18.1829732618')}, '_initialised': True, '_constraints': [], '_finalise': True}
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000218868255615 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000107049942017 s ---
INFO:ase.optimize.precon:--- remove zeros in 5.29289245605e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000362157821655 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000480890274048 s ---
INFO:ase.optimize.precon:mu (-0.000) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=16.989973748183793
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000231027603149 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 8.9168548584e-05 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 2.88486480713e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 2.90870666504e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000302791595459 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000480175018311 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00160813331604 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000128030776978 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   3  19:46:21      -18.183011       0.0000       0.0004
{'_fpointer': array([857239040,     32754], dtype=int32), '_ase_arrays': {'force': array([[ 1.54341817e-13,  7.45933902e-17,  8.15320034e-17],
       [-1.59355168e-13, -8.32667268e-17, -3.46944695e-17],
       [ 5.56412555e-15,  4.68375339e-17,  5.55111512e-17]]), 'positions': array([[ 1.35261958e+00,  1.25711517e-31, -1.01018452e-34],
       [ 4.05785873e+00, -1.50319380e-19,  1.38272890e+00],
       [ 6.76309788e+00, -1.50319380e-19,  1.38272890e+00]]), 'map_shift': array([[ 0,  0,  0],
       [-1, -1, -1],
       [-1, -1, -1]], dtype=int32), 'numbers': array([22, 22, 22], dtype=int32), 'n_neighb': array([70, 70, 70], dtype=int32), 'species': array([['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
       ['T', 'i', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']], dtype='|S1')}, '_celldisp': array([[0.],
       [0.],
       [0.]]), 'hysteretic_neighbours': <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, '_update_hooks': [], '_calc': <utilities.SymmetrizedCalculator instance at 0x11a92d440>, 'neighbours': <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, '_subobjs_cache': {(857240752, 32754): <Connection object at 0x11a922850 fpointer=(857240752, 32754)>, (857240280, 32754): <Connection object at 0x11a922890 fpointer=(857240280, 32754)>, (857239264, 32754): Dictionary('Z="22 22 22" pos="1.3526195756982624 1.257115173080829e-31 -1.0101845237158083e-34 4.057858727094787 -1.503193802248961e-19 1.3827289010350403 6.763097878491312 -1.503193802245749e-19 1.3827289010350403" species="T i                 T i                 T i                " map_shift="0 0 0 -1 -1 -1 -1 -1 -1" n_neighb="70 70 70" force="1.5434181710460848e-13 7.459339015425285e-17 8.153200337090993e-17 -1.5935516795018145e-13 -8.326672684688674e-17 -3.469446951953614e-17 5.564125549195609e-15 4.683753385137379e-17 5.551115123125783e-17"'), (857239376, 32754): Dictionary('virial="-0.014717790869946068 1.561244037725676e-16 -2.0990154059319366e-16 1.422480843562365e-16 -0.014717790869905989 -1.9075811504926985e-16 2.509477026290536e-16 -2.7183307850116537e-17 -0.020056937394267005" energy=-18.1830110032')}, '_initialised': True, '_constraints': [], '_finalise': True}
relaxed bulk
3
Lattice="4.057858727094787 -2.3428058284216475 2.381932495003274e-19 4.057858727094787 2.3428058284216475 -2.3819324950032444e-19 1.0695466270414519e-33 -3.0063876044972462e-19 2.7654578020700806" Properties=species:S:1:pos:R:3:Z:I:1:map_shift:I:3:n_neighb:I:1:force:R:3:forces:R:3 virial="-0.014717790869946068 1.561244037725676e-16 -2.0990154059319366e-16 1.422480843562365e-16 -0.014717790869905989 -1.9075811504926985e-16 2.509477026290536e-16 -2.7183307850116537e-17 -0.020056937394267005" energy=-18.1830110032 stress="0.0002799061089209646 5.222796466836059e-20 -9.160648035010764e-35 5.222796466836059e-20 0.00027990610892096487 1.3097232686360627e-39 -9.160648035010764e-35 1.3097232686360627e-39 0.0003814471446507848" pbc="T T T"
Ti       1.35261958       0.00000000      -0.00000000       22        0        0        0       70       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000 
Ti       4.05785873      -0.00000000       1.38272890       22       -1       -1       -1       70      -0.00000000      -0.00000000      -0.00000000       0.00000000      -0.00000000       0.00000000 
Ti       6.76309788      -0.00000000       1.38272890       22       -1       -1       -1       70       0.00000000       0.00000000       0.00000000       0.00000000      -0.00000000      -0.00000000 
calculating elastic constants
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
PreconLBFGS:   0  19:46:21      -18.164072       0.0784
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.00 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=2.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=4.24 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): got r_NN=2.766 in 0.00129914283752 s
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000263929367065 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000120878219604 s ---
INFO:ase.optimize.precon:--- remove zeros in 3.69548797607e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000411987304688 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000568151473999 s ---
INFO:ase.optimize.precon:mu (0.368) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=1.0
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000237941741943 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 9.20295715332e-05 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 3.09944152832e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 2.90870666504e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000304937362671 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000582933425903 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00174188613892 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000128030776978 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   1  19:46:22      -18.164555       0.0204
PreconLBFGS:   0  19:46:22      -18.178198       0.0387
PreconLBFGS:   0  19:46:22      -18.183011       0.0000
PreconLBFGS:   0  19:46:22      -18.177839       0.0356
PreconLBFGS:   0  19:46:22      -18.163277       0.0632
INFO:ase.optimize.precon:max(abs(displacements)) = 0.00 A (0.00 r_NN)
INFO:ase.optimize.precon:--- Precon applied in 0.000247955322266 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   1  19:46:22      -18.163640       0.0287
PreconLBFGS:   0  19:46:22      -18.159695       0.0564
INFO:ase.optimize.precon:max(abs(displacements)) = 0.14 A (0.05 r_NN)
INFO:ase.optimize.precon:--- Precon applied in 0.000138998031616 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   1  19:46:22      -18.159963       0.0200
PreconLBFGS:   0  19:46:22      -18.177238       0.0336
PreconLBFGS:   0  19:46:22      -18.183011       0.0000
PreconLBFGS:   0  19:46:22      -18.176917       0.0398
PreconLBFGS:   0  19:46:22      -18.159764       0.0777
INFO:ase.optimize.precon:max(abs(displacements)) = 0.14 A (0.05 r_NN)
INFO:ase.optimize.precon:--- Precon applied in 0.000178098678589 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   1  19:46:22      -18.160271       0.0271
Fitting C_11
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-4.78601409, -2.50663317,  0.0448459 ,  2.60793405,  4.78361399]) GPa
Cij (gradient) / GPa    :     242.53823381913332
Error in Cij / GPa      :     3.9373092350051517
Correlation coefficient :     0.99960493144385
Setting C11 (1) to 1.513805 +/- 0.024575


Fitting C_21
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-2.73518909, -1.33644248,  0.0448459 ,  1.4291513 ,  2.72565422]) GPa
Cij (gradient) / GPa    :     136.87280401278977
Error in Cij / GPa      :     1.0910376493828096
Correlation coefficient :     0.9999047040767697
Setting C21 (7) to 0.854293 +/- 0.006810


Fitting C_31
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-2.86613016, -1.50814589,  0.06111457,  1.69677418,  3.09411022]) GPa
Cij (gradient) / GPa    :     151.25400829176849
Error in Cij / GPa      :     2.71311114336569
Correlation coefficient :     0.9995177209694005
Setting C31 (8) to 0.944053 +/- 0.016934


Fitting C_61
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([ 8.11996686e-13,  4.62877385e-13, -4.33437583e-16,  2.12185296e-14,
       -9.67451535e-13]) GPa
Cij (gradient) / GPa    :     -4.000555296880319e-11
Error in Cij / GPa      :     7.916620913081068e-12
Correlation coefficient :     -0.9459764101492275
Setting C61 (0) to -0.000000 +/- 0.000000


Fitting C_44
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-6.93787137e-01, -4.30390881e-01,  8.28290048e-17,  4.75666396e-01,
        8.38578754e-01]) GPa
Cij (gradient) / GPa    :     39.707890597747856
Error in Cij / GPa      :     2.0089857060761482
Correlation coefficient :     0.9961823265831072
Setting C44 (4) to 0.247837 +/- 0.012539


Fitting C_33
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-6.1529389 , -3.02019747,  0.06111457,  3.00710367,  5.61142096]) GPa
Cij (gradient) / GPa    :     295.5602085531457
Error in Cij / GPa      :     6.059640493736554
Correlation coefficient :     0.9993700841383318
Setting C33 (3) to 1.844742 +/- 0.037821


Fitting C_66
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-8.95043164e-01, -5.48674730e-01, -4.33437583e-16,  6.09376492e-01,
        1.02842319e+00]) GPa
Cij (gradient) / GPa    :     50.04983929233874
Error in Cij / GPa      :     2.4913336089491565
Correlation coefficient :     0.9963039596967244
Setting C66 (6) to 0.312387 +/- 0.015550


[[ C11  C12  C13               ]
 [ C12  C11  C13               ]
 [ C13  C13  C33               ]
 [                C44          ]
 [                     C44     ]
 [                          C66]]

 = 

[[242.54 136.87 151.25   0.     0.     0.  ]
 [136.87 242.54 151.25   0.     0.     0.  ]
 [151.25 151.25 295.56   0.     0.     0.  ]
 [  0.     0.     0.    39.71   0.     0.  ]
 [  0.     0.     0.     0.    39.71   0.  ]
 [  0.     0.     0.     0.     0.    50.05]]
C_11 = 242.54 +/- 3.94 GPa
C_12 = 136.87 +/- 1.09 GPa
C_13 = 151.25 +/- 2.71 GPa
C_33 = 295.56 +/- 6.06 GPa
C_44 = 39.71 +/- 2.01 GPa
C_66 = 50.05 +/- 2.49 GPa
calculating E vs. V
bulk going into E vs. V
3
Lattice="4.057858727094787 -2.3428058284216475 2.381932495003274e-19 4.057858727094787 2.3428058284216475 -2.3819324950032444e-19 1.0695466270414519e-33 -3.0063876044972462e-19 2.7654578020700806" Properties=species:S:1:pos:R:3:Z:I:1:map_shift:I:3:n_neighb:I:1:force:R:3 virial="-0.014717790869946068 1.561244037725676e-16 -2.0990154059319366e-16 1.422480843562365e-16 -0.014717790869905989 -1.9075811504926985e-16 2.509477026290536e-16 -2.7183307850116537e-17 -0.020056937394267005" energy=-18.1830110032 pbc="T T T"
Ti       1.35261958       0.00000000      -0.00000000       22        0        0        0       70       0.00000000       0.00000000       0.00000000 
Ti       4.05785873      -0.00000000       1.38272890       22       -1       -1       -1       70      -0.00000000      -0.00000000      -0.00000000 
Ti       6.76309788      -0.00000000       1.38272890       22       -1       -1       -1       70       0.00000000       0.00000000       0.00000000 
doing volume step 0
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 0
done evaluate step 0
EV  0 52.58117061704357 -18.1830110032 [ 2.79906109e-04  2.79906109e-04  3.81447145e-04  5.77305864e-19
  1.66726362e-15 -5.87247363e-18]
doing volume step -1
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step -1
done evaluate step -1
EV  -1 51.26633499412003 -18.1634863861 [-2.99806703e-02 -2.99806703e-02 -2.98462983e-02  2.17297548e-18
 -1.46532138e-14 -3.45142123e-18]
doing volume step -2
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step -2
done evaluate step -2
EV  -2 49.952010601415985 -18.1048912747 [-5.89514946e-02 -5.89514946e-02 -5.89413661e-02  1.73516931e-16
 -4.58690645e-15  8.11385392e-16]
doing volume step -3
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step -3
done evaluate step -3
EV  -3 48.63253774777783 -18.0167344976 [-7.65813535e-02 -7.65813535e-02 -7.67805152e-02  5.21874059e-17
 -7.18550932e-16 -2.35271670e-15]
doing volume step -4
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step -4
done evaluate step -4
EV  -4 47.161551627945904 -18.0800577829 [-4.52498471e-03 -4.52498471e-03 -4.72329429e-03 -7.33795453e-15
 -2.42112125e-14 -1.13924106e-14]
doing volume step -5
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step -5
done evaluate step -5
EV  -5 46.0079809648845 -18.0654752764 [-2.21769662e-02 -2.21769662e-02 -2.21839326e-02  4.02367862e-16
 -1.72048327e-14  1.76611913e-14]
doing volume step 1
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 1
done evaluate step 1
EV  1 53.89525162203931 -18.1635133971 [ 2.85950881e-02  2.85950881e-02  2.87511796e-02  6.47989973e-19
  1.57524006e-18 -7.33865175e-18]
doing volume step 2
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 2
done evaluate step 2
EV  2 55.20988032484089 -18.1111415037 [4.91341507e-02 4.91341507e-02 4.93272620e-02 1.00870086e-18
 8.16923487e-18 7.87205457e-17]
doing volume step 3
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 3
done evaluate step 3
EV  3 56.52470130683505 -18.0406572946 [ 5.49963199e-02  5.49963199e-02  5.50292850e-02 -2.43327137e-16
 -1.40901390e-15  2.24228442e-15]
doing volume step 4
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 4
done evaluate step 4
EV  4 57.839202224684534 -17.9671299557 [ 6.13516707e-02  6.13516707e-02  6.13858135e-02 -4.66423423e-17
 -1.71749027e-15  9.83480987e-17]
doing volume step 5
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 5
done evaluate step 5
EV  5 59.15360050068245 -17.8787707186 [ 7.21379889e-02  7.21379889e-02  7.21681011e-02 -1.15881322e-15
  3.28559737e-15  2.00695616e-16]
doing volume step 6
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 191 , international (Hermann-Mauguin) P6/mmm , Hall -P 6 2
done relaxing step 6
done evaluate step 6
EV  6 60.468034419234954 -17.7803722118 [7.65233790e-02 7.65233790e-02 7.65567036e-02 2.22521704e-15
 9.06447329e-17 4.89415957e-15]
EV_final  15.3359936549615 -6.02182509215
EV_final  15.720517209315302 -6.02668592763
EV_final  16.210845915925944 -6.00557816586
EV_final  16.650670200471996 -6.03496375825
EV_final  17.088778331373344 -6.05449546203
EV_final  17.527056872347856 -6.06100366772
EV_final  17.965083874013104 -6.05450446571
EV_final  18.40329344161363 -6.03704716789
EV_final  18.84156710227835 -6.01355243154
EV_final  19.279734074894844 -5.98904331857
EV_final  19.717866833560816 -5.95959023955
EV_final  20.15601147307832 -5.92679073727
============================================================
Property calculation output:


Summary of computed properties:
{'omega_c44': '39.707890597747856', 'omega_c33': '295.5602085531457', 'omega_E_vs_V': [('15.3359936549615', -6.021825092149896), ('15.720517209315302', -6.026685927631042), ('16.210845915925944', -6.005578165856821), ('16.650670200471996', -6.034963758249286), ('17.088778331373344', -6.0544954620338105), ('17.527056872347856', -6.0610036677201755), ('17.965083874013104', -6.054504465714207), ('18.40329344161363', -6.037047167885898), ('18.84156710227835', -6.013552431542691), ('19.279734074894844', -5.989043318574189), ('19.717866833560816', -5.959590239549594), ('20.15601147307832', -5.926790737270114)], 'omega_c13': '151.25400829176849', 'omega_c11': '242.53823381913332', 'omega_c66': '50.04983929233874', 'omega_c12': '136.87280401278977'}
============================================================
