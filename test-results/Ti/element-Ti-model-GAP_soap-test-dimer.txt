Model GAP_soap, Test dimer
Test run at 2018-09-10 15:02

model file: ../../../models/Ti/GAP_soap/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2018_6_25_60_16_10_2_989"',
                                               param_filename='gp_soap_no_wire_surface.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2018_6_25_60_16_10_2_989"',
                                               param_filename='gp_soap_no_wire_surface.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Ti/dimer/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

from ase import Atoms
import model
import numpy as np

dimer = Atoms('Ti2',
               positions=[[0, 0, 0],
                          [0, 0, 1.2]], cell=[[20,0,0],[0,20,0],[0,0,20]])


dimer.set_calculator(model.calculator)
    
p = dimer.get_positions()
e = []
rr = []
for r in np.arange(1.2,6.0,0.1):
    p[1,2] = r
    dimer.set_positions(p)
    e.append(dimer.get_potential_energy())
    rr.append(r)

properties = {'dimer distance':rr, 'dimer energy': e}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'dimer energy': [-11.391896103099455, -11.341307002373224, -11.214038210025631, -11.001574201180448, -10.721760337529037, -10.423808275990488, -10.174205909759882, -10.024437460117202, -9.983947490841569, -10.02269205884052, -10.098695223531172, -10.183406959164225, -10.26620096348491, -10.342843462854749, -10.405669823382866, -10.446199402295317, -10.46398617798956, -10.468831730745489, -10.473513412195276, -10.485567931387367, -10.505797769862452, -10.53243147971396, -10.564899514704756, -10.603909748009391, -10.716691512827296, -10.902294589752298, -11.064619364006836, -11.158557820687587, -11.183883447906526, -11.17971119333144, -11.175984672560272, -11.172676533533068, -11.16972014261182, -11.167017258623806, -11.164448259002926, -11.161884110906994, -11.159199068539431, -11.156282948389363, -11.153051812976996, -11.149455997740402, -11.145484647661965, -11.141166275609734, -11.13656528061081, -11.131774822988984, -11.126906885665305, -11.122080695824586, -11.117410884936326, -11.11299679129427], 'dimer distance': ['1.2', '1.3', '1.4000000000000001', '1.5000000000000002', '1.6000000000000003', '1.7000000000000004', '1.8000000000000005', '1.9000000000000006', '2.000000000000001', '2.1000000000000005', '2.200000000000001', '2.3000000000000007', '2.4000000000000012', '2.500000000000001', '2.6000000000000014', '2.700000000000001', '2.8000000000000016', '2.9000000000000012', '3.0000000000000018', '3.1000000000000014', '3.200000000000002', '3.3000000000000016', '3.400000000000002', '3.5000000000000018', '3.6000000000000023', '3.700000000000002', '3.8000000000000025', '3.900000000000002', '4.000000000000003', '4.100000000000002', '4.200000000000003', '4.3000000000000025', '4.400000000000003', '4.500000000000003', '4.600000000000003', '4.700000000000003', '4.800000000000003', '4.900000000000003', '5.0000000000000036', '5.100000000000003', '5.200000000000004', '5.300000000000003', '5.400000000000004', '5.500000000000004', '5.600000000000004', '5.700000000000004', '5.800000000000004', '5.900000000000005']}
============================================================
