Model GAP_2b_3b, Test surface-energy-111-unrelaxed
Test run at 2018-09-03 18:54

model file: ../../../models/Ti/GAP_2b_3b/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2018_5_29_60_13_48_53_535"',
                                               param_filename='gp_2b_3b.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2018_5_29_60_13_48_53_535"',
                                               param_filename='gp_2b_3b.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Ti/surface-energy-111-unrelaxed/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.cubic import BodyCenteredCubic
import numpy as np

import ase.io, sys

# set of utility routines specific this this model/testing framework
from utilities import relax_atoms, relax_atoms_cell

# the current model
import model

a0 = 3.16 # initial guess at lattice constant, cell will be relaxed below
fmax = 0.01 # maximum force following relaxtion [eV/A]

# set up the a
bulk = BodyCenteredCubic(symbol='W', latticeconstant=a0, directions=[[1,-1,0],[1,0,-1],[1,1,1]])

# specify that we will use model.calculator to compute forces, energies and stresses
bulk.set_calculator(model.calculator)

# use one of the routines from utilities module to relax the initial
# unit cell and atomic positions
bulk = relax_atoms_cell(bulk, tol=fmax, traj_file=None)

# set up supercell
bulk *= (1, 1, 10)


def surface_energy(bulk, z_offset):
    Nat = bulk.get_number_of_atoms()

    # shift so cut is through shuffle plane
    bulk.positions[:,2] += z_offset
    bulk.wrap()

    # relax atom positions, holding cell fixed
    # vac = relax_atoms(vac, fmax=fmax)

    # compute surface formation energy as difference of bulk and expanded cell
    ebulk = bulk.get_potential_energy()
    print 'bulk cell energy', ebulk

    bulk.cell[2,:] += [0.0,0.0,10.0]
    eexp  = bulk.get_potential_energy()

    ase.io.write(sys.stdout, bulk, format='extxyz')

    print 'expanded cell energy', eexp
    e_form = 0.5*(eexp - ebulk) / np.linalg.norm(np.cross(bulk.cell[0,:],bulk.cell[1,:]))
    print 'unrelaxed 111 surface formation energy', e_form
    return e_form

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'surface_energy_111_unrelaxed':
                surface_energy(bulk, 2.0) }
============================================================
relax_atoms_cell using method lbfgs_precon
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
PreconLBFGS:   0  18:54:24      -17.522534       0.0000       0.0483
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.00 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=2.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=4.24 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): got r_NN=2.737 in 0.0016040802002 s
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000216007232666 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.00019097328186 s ---
INFO:ase.optimize.precon:--- remove zeros in 0.000530958175659 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00102591514587 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00114679336548 s ---
INFO:ase.optimize.precon:mu (-0.100) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:mu_c (-38.161) < 1.0, capping at mu_c=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=1.0
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000432014465332 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000185966491699 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 7.00950622559e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 6.50882720947e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000656127929688 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00100898742676 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00331902503967 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000720024108887 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.208, suff_dec = True
PreconLBFGS:   1  18:54:25      -18.112495       0.0000       0.0255
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000216007232666 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000565052032471 s ---
INFO:ase.optimize.precon:--- remove zeros in 9.79900360107e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000860929489136 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00116014480591 s ---
INFO:ase.optimize.precon:mu (-1.094) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=180.69839111158737
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000192880630493 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000173091888428 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 7.79628753662e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 5.69820404053e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000839948654175 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00113606452942 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00352907180786 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000226020812988 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.184, suff_dec = True
PreconLBFGS:   2  18:54:25      -18.141126       0.0000       0.0004
bulk cell energy -181.411255668
30
Lattice="4.765785440460903 -2.6626204661086903e-14 -2.76702239875814e-14 2.382892720230428 4.127291260425233 9.139027082388711e-15 -1.6944482459523417e-13 1.6245169532689304e-13 39.18435638178731" Properties=species:S:1:pos:R:3:Z:I:1 energy=-178.658781327 pbc="T T T"
W       0.00000000      -0.00000000       2.00000000       74 
W       2.38289272       1.37576375       3.94562376       74 
W       4.76578544       2.75152751       2.97281188       74 
W      -0.00000000       0.00000000       4.91843564       74 
W       2.38289272       1.37576375       6.86405940       74 
W       4.76578544       2.75152751       5.89124752       74 
W      -0.00000000       0.00000000       7.83687128       74 
W       2.38289272       1.37576375       9.78249504       74 
W       4.76578544       2.75152751       8.80968316       74 
W      -0.00000000       0.00000000      10.75530691       74 
W       2.38289272       1.37576375      12.70093067       74 
W       4.76578544       2.75152751      11.72811879       74 
W      -0.00000000       0.00000000      13.67374255       74 
W       2.38289272       1.37576375      15.61936631       74 
W       4.76578544       2.75152751      14.64655443       74 
W      -0.00000000       0.00000000      16.59217819       74 
W       2.38289272       1.37576375      18.53780195       74 
W       4.76578544       2.75152751      17.56499007       74 
W      -0.00000000       0.00000000      19.51061383       74 
W       2.38289272       1.37576375      21.45623759       74 
W       4.76578544       2.75152751      20.48342571       74 
W      -0.00000000       0.00000000      22.42904947       74 
W       2.38289272       1.37576375      24.37467323       74 
W       4.76578544       2.75152751      23.40186135       74 
W      -0.00000000       0.00000000      25.34748511       74 
W       2.38289272       1.37576375      27.29310886       74 
W       4.76578544       2.75152751      26.32029698       74 
W      -0.00000000       0.00000000      28.26592074       74 
W       2.38289272       1.37576375       1.02718812       74 
W       4.76578544       2.75152751       0.05437624       74 
expanded cell energy -178.658781327
unrelaxed 111 surface formation energy 0.0699670687160518
============================================================
Property calculation output:


Summary of computed properties:
{'surface_energy_111_unrelaxed': '0.0699670687160518'}
============================================================
