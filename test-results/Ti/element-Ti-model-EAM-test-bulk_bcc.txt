Model EAM, Test bulk_bcc
Test run at 2018-10-11 20:23

model file: ../../../models/Ti/EAM/model.py
============================================================
from ase.calculators.eam import EAM
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
filename = os.path.join(model_dir, 'Zope-Ti-Al-2003.eam.alloy')

calculator = EAM(potential=filename)

no_checkpoint = True
name = 'EAM'============================================================
test file: ../../../tests/Ti/bulk_bcc/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.cubic import BodyCenteredCubic

import lattice_cubic

# the current model
import model 

#a0 = 3.32 # initial guess at lattice constant, cell will be relaxed below
a0 = 3.32

# set up the a
bulk = BodyCenteredCubic(symbol='Ti', latticeconstant=a0)


(c11, c12, c44, E_vs_V) = lattice_cubic.do_lattice(bulk, elastic=True)

#properties = {'bcc_E_vs_V': E_vs_V }

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'bcc_c11': c11, 'bcc_c12': c12, 'bcc_c44': c44, 'bcc_E_vs_V': E_vs_V }
============================================================
relax_atoms_cell using method cg_n
symmetry.prep: symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
[[7.95223354e-274 3.40810009e-274 0.00000000e+000]
 [5.41233725e-016 5.41233725e-016 4.99600361e-016]]
Traceback (most recent call last):
  File "run-model-test-cas.py", line 102, in <module>
    import test  # import and run the current test
  File "../../../tests/Ti/bulk_bcc/test.py", line 27, in <module>
    (c11, c12, c44, E_vs_V) = lattice_cubic.do_lattice(bulk, elastic=True)
  File "../../../share/lattice_cubic.py", line 30, in do_lattice
    bulk = relax_atoms_cell(bulk, tol=tol, traj_file=None, symmetrize=True)
  File "../../../share/utilities.py", line 178, in relax_atoms_cell
    opt.run(tol, max_steps)
  File "/Users/Cas/anaconda2/lib/python2.7/site-packages/quippy/potential.py", line 680, in run
    use_precond=self.use_precond)
  File "/Users/Cas/anaconda2/lib/python2.7/site-packages/quippy/oo_fortran.py", line 856, in <lambda>
    wrapmethod = lambda name: lambda self, *args, **kwargs: self._runroutine(name, *args, **kwargs)
  File "/Users/Cas/anaconda2/lib/python2.7/site-packages/quippy/oo_fortran.py", line 574, in _runroutine
    res = fobj(*newargs, **newkwargs)
  File "/Users/Cas/anaconda2/lib/python2.7/site-packages/quippy/potential.py", line 285, in callback
    Potential.callback_map[at.params['label']](at)
  File "/Users/Cas/anaconda2/lib/python2.7/site-packages/quippy/potential.py", line 57, in callback
    stress = at.get_stress()
  File "/Users/Cas/.local/lib/python2.7/site-packages/ase/atoms.py", line 757, in get_stress
    stress = self._calc.get_stress(self)
  File "/Users/Cas/.local/lib/python2.7/site-packages/ase/calculators/calculator.py", line 456, in get_stress
    return self.get_property('stress', atoms)
  File "/Users/Cas/.local/lib/python2.7/site-packages/ase/calculators/calculator.py", line 486, in get_property
    self.calculate(atoms, [name], system_changes)
  File "../../../share/utilities.py", line 361, in calculate
    raw_stress = self.calc.get_stress(atoms)
  File "/Users/Cas/.local/lib/python2.7/site-packages/ase/calculators/calculator.py", line 456, in get_stress
    return self.get_property('stress', atoms)
  File "/Users/Cas/.local/lib/python2.7/site-packages/ase/calculators/calculator.py", line 474, in get_property
    .format(name))
ase.calculators.calculator.PropertyNotImplementedError: stress property not implemented
