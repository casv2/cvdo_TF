Model GAP_soap, Test surface-energy-111-unrelaxed
Test run at 2018-09-10 15:02

model file: ../../../models/Ti/GAP_soap/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2018_6_25_60_16_10_2_989"',
                                               param_filename='gp_soap_no_wire_surface.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2018_6_25_60_16_10_2_989"',
                                               param_filename='gp_soap_no_wire_surface.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Ti/surface-energy-111-unrelaxed/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.cubic import BodyCenteredCubic
import numpy as np

import ase.io, sys

# set of utility routines specific this this model/testing framework
from utilities import relax_atoms, relax_atoms_cell

# the current model
import model

a0 = 3.32# initial guess at lattice constant, cell will be relaxed below
fmax = 0.01 # maximum force following relaxtion [eV/A]

# set up the a
bulk = BodyCenteredCubic(symbol='Ti', latticeconstant=a0, directions=[[1,-1,0],[1,0,-1],[1,1,1]])

# specify that we will use model.calculator to compute forces, energies and stresses
bulk.set_calculator(model.calculator)

# use one of the routines from utilities module to relax the initial
# unit cell and atomic positions
bulk = relax_atoms_cell(bulk, tol=fmax, traj_file=None)

# set up supercell
bulk *= (1, 1, 10)


def surface_energy(bulk, z_offset):
    Nat = bulk.get_number_of_atoms()

    # shift so cut is through shuffle plane
    bulk.positions[:,2] += z_offset
    bulk.wrap()

    # relax atom positions, holding cell fixed
    # vac = relax_atoms(vac, fmax=fmax)

    # compute surface formation energy as difference of bulk and expanded cell
    ebulk = bulk.get_potential_energy()
    print 'bulk cell energy', ebulk

    bulk.cell[2,:] += [0.0,0.0,10.0]
    eexp  = bulk.get_potential_energy()

    ase.io.write(sys.stdout, bulk, format='extxyz')

    print 'expanded cell energy', eexp
    e_form = 0.5*(eexp - ebulk) / np.linalg.norm(np.cross(bulk.cell[0,:],bulk.cell[1,:]))
    print 'unrelaxed 111 surface formation energy', e_form
    return e_form

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'surface_energy_111_unrelaxed':
                surface_energy(bulk, 2.0) }
============================================================
relax_atoms_cell using method cg_n
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
bulk cell energy -180.722585518
30
Lattice="4.638042144825117 5.31967135210597e-16 2.4307540446315404e-15 2.319021072412559 4.016662321241407 4.648216405485059e-16 1.542326855410927e-14 -5.654553156261262e-15 38.402091650863" Properties=species:S:1:pos:R:3:Z:I:1 energy=-175.886627294 Minim_Constant_Volume=F Minim_Hydrostatic_Strain=F pbc="T T T"
Ti       0.00000000       0.00000000       2.00000000       22 
Ti       2.31902107       1.33888744       3.89347278       22 
Ti       4.63804214       2.67777488       2.94673639       22 
Ti       0.00000000      -0.00000000       4.84020917       22 
Ti       2.31902107       1.33888744       6.73368194       22 
Ti       4.63804214       2.67777488       5.78694555       22 
Ti       0.00000000      -0.00000000       7.68041833       22 
Ti       2.31902107       1.33888744       9.57389111       22 
Ti       4.63804214       2.67777488       8.62715472       22 
Ti       0.00000000      -0.00000000      10.52062750       22 
Ti       2.31902107       1.33888744      12.41410027       22 
Ti       4.63804214       2.67777488      11.46736388       22 
Ti       0.00000000      -0.00000000      13.36083666       22 
Ti       2.31902107       1.33888744      15.25430944       22 
Ti       4.63804214       2.67777488      14.30757305       22 
Ti       0.00000000      -0.00000000      16.20104583       22 
Ti       2.31902107       1.33888744      18.09451860       22 
Ti       4.63804214       2.67777488      17.14778221       22 
Ti       0.00000000      -0.00000000      19.04125499       22 
Ti       2.31902107       1.33888744      20.93472777       22 
Ti       4.63804214       2.67777488      19.98799138       22 
Ti       0.00000000      -0.00000000      21.88146416       22 
Ti       2.31902107       1.33888744      23.77493693       22 
Ti       4.63804214       2.67777488      22.82820054       22 
Ti       0.00000000      -0.00000000      24.72167332       22 
Ti       2.31902107       1.33888744      26.61514610       22 
Ti       4.63804214       2.67777488      25.66840971       22 
Ti       0.00000000      -0.00000000      27.56188249       22 
Ti       2.31902107       1.33888744       1.05326361       22 
Ti       4.63804214       2.67777488       0.10652722       22 
expanded cell energy -175.886627294
unrelaxed 111 surface formation energy 0.12979337690176262
============================================================
Property calculation output:


Summary of computed properties:
{'surface_energy_111_unrelaxed': '0.12979337690176262'}
============================================================
