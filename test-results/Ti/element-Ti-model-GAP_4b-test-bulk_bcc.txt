Model GAP_4b, Test bulk_bcc
Test run at 2018-09-03 18:54

model file: ../../../models/Ti/GAP_4b/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2018_6_26_60_20_15_36_820"',
                                               param_filename='gp_4b_no_wire_surface.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2018_6_26_60_20_15_36_820"',
                                               param_filename='gp_4b_no_wire_surface.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Ti/bulk_bcc/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.cubic import BodyCenteredCubic

import lattice_cubic

# the current model
import model 

a0 = 2.95 # initial guess at lattice constant, cell will be relaxed below

# set up the a
bulk = BodyCenteredCubic(symbol='Ti', latticeconstant=a0)

(c11, c12, c44, E_vs_V) = lattice_cubic.do_lattice(bulk, elastic=True)

#properties = {'bcc_E_vs_V': E_vs_V }

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'bcc_c11': c11, 'bcc_c12': c12, 'bcc_c44': c44, 'bcc_E_vs_V': E_vs_V }
============================================================
relax_atoms_cell using method lbfgs_precon
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
PreconLBFGS:   0  18:55:01      -10.919139       0.0000       0.2316
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.00 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=2.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): got r_NN=2.555 in 0.0012412071228 s
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000196933746338 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000181913375854 s ---
INFO:ase.optimize.precon:--- remove zeros in 6.69956207275e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00154805183411 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00222611427307 s ---
INFO:ase.optimize.precon:mu (-0.000) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:mu_c (-97.930) < 1.0, capping at mu_c=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=1.0
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000200033187866 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000178098678589 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 6.19888305664e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 5.48362731934e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000619173049927 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000941038131714 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00289797782898 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000310897827148 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.523, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.294, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.131, suff_dec = True
PreconLBFGS:   1  18:55:02      -12.427524       0.0000       0.0652
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000123023986816 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000159025192261 s ---
INFO:ase.optimize.precon:--- remove zeros in 5.69820404053e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000786066055298 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00111198425293 s ---
INFO:ase.optimize.precon:mu (0.000) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:mu_c (-115.259) < 1.0, capping at mu_c=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=1.0
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000188827514648 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000189781188965 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 5.69820404053e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 6.07967376709e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000663042068481 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00111317634583 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00316596031189 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000213861465454 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.205, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.113, suff_dec = True
PreconLBFGS:   2  18:55:03      -12.449628       0.0000       0.0009
relaxed bulk
2
Lattice="3.507826104494558 3.1697536827753544e-35 1.8433374078820763e-34 3.1697536827753576e-35 3.507826104494557 -9.742588140242368e-17 1.8433374078820763e-34 -9.742588140242368e-17 3.507826104494557" Properties=species:S:1:pos:R:3:Z:I:1:forces:R:3 energy=-12.4496280574 stress="-0.0008912795517530354 5.217267680965484e-36 6.521584601206858e-36 5.217267680965484e-36 -0.0008912795517530357 -7.049524303373207e-19 6.521584601206858e-36 -7.049524303373207e-19 -0.0008912795517530363" pbc="T T T"
Ti      -0.00000000      -0.00000000       0.00000000       22      -0.00000000      -0.00000000      -0.00000000 
Ti       1.75391305       1.75391305       1.75391305       22      -0.00000000       0.00000000       0.00000000 
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
Fitting C_11
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-15.55460849,  -8.74841573,  -0.14279873,  10.03366477,
        17.04663727]) GPa
Cij (gradient) / GPa    :     839.8457201684333
Error in Cij / GPa      :     31.803331621441142
Correlation coefficient :     0.9978559298950317
Setting C11 (1) to 5.241905 +/- 0.198501


Fitting C_21
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-7.81607972, -4.21775941, -0.14279873,  5.18762258,  8.52961261]) GPa
Cij (gradient) / GPa    :     420.9676665832735
Error in Cij / GPa      :     17.109871897467464
Correlation coefficient :     0.9975312521808525
Setting C21 (7) to 2.627474 +/- 0.106791


Fitting C_31
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-7.81607972, -4.21775941, -0.14279873,  5.18762258,  8.52961261]) GPa
Cij (gradient) / GPa    :     420.9676665832741
Error in Cij / GPa      :     17.109871897466714
Correlation coefficient :     0.9975312521808527
Updating C31 (7) with value 2.627474 +/- 0.106791


Fitting C_44
Strain array([-0.02, -0.01,  0.  ,  0.01,  0.02])
Stress array([-7.18140689e+00, -4.07886487e+00,  2.10835571e-17,  3.92650217e+00,
        6.68677901e+00]) GPa
Cij (gradient) / GPa    :     357.417388421153
Error in Cij / GPa      :     13.029037753295597
Correlation coefficient :     0.9980126769872171
Setting C44 (4) to 2.230824 +/- 0.081321


[[ C11  C12  C12               ]
 [ C12  C11  C12               ]
 [ C12  C12  C11               ]
 [                C44          ]
 [                     C44     ]
 [                          C44]]

 = 

[[839.85 420.97 420.97   0.     0.     0.  ]
 [420.97 839.85 420.97   0.     0.     0.  ]
 [420.97 420.97 839.85   0.     0.     0.  ]
 [  0.     0.     0.   357.42   0.     0.  ]
 [  0.     0.     0.     0.   357.42   0.  ]
 [  0.     0.     0.     0.     0.   357.42]]
C_11 = 839.85 +/- 31.80 GPa
C_12 = 420.97 +/- 17.11 GPa
C_44 = 357.42 +/- 13.03 GPa
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
EV_final  18.88392315362827 -5.91924998758
EV_final  19.42346381516051 -5.96670596231
EV_final  19.963004476692745 -6.04718787026
EV_final  20.50254513822499 -6.13358393542
EV_final  21.042085799757224 -6.19942953295
EV_final  21.581626461289474 -6.22481402868
EV_final  22.121167122821706 -6.19763492737
EV_final  22.66070778435393 -6.14044622481
EV_final  23.200248445886164 -6.0768873959
EV_final  23.739789107418407 -6.0087476468
EV_final  24.279329768950635 -5.93761931123
EV_final  24.818870430482885 -5.8649072058
============================================================
Property calculation output:


Summary of computed properties:
{'bcc_c12': '420.9676665832738', 'bcc_c11': '839.8457201684333', 'bcc_c44': '357.417388421153', 'bcc_E_vs_V': [('18.88392315362827', -5.919249987581776), ('19.42346381516051', -5.966705962313637), ('19.963004476692745', -6.047187870261507), ('20.50254513822499', -6.13358393541991), ('21.042085799757224', -6.199429532949966), ('21.581626461289474', -6.224814028680155), ('22.121167122821706', -6.197634927371702), ('22.66070778435393', -6.140446224810774), ('23.200248445886164', -6.076887395899936), ('23.739789107418407', -6.008747646802981), ('24.279329768950635', -5.937619311232899), ('24.818870430482885', -5.864907205803656)]}
============================================================
