Model PIP_4BBA_short, Test dimer
Test run at 2018-09-29 13:17

model file: ../../../models/Si/PIP_4BBA_short/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/SiPIP_4BBA_short_cas.json")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/Si/dimer/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

from ase import Atoms
import model
import numpy as np

dimer = Atoms('Si2',
               positions=[[0, 0, 0],
                          [0, 0, 1.5]], cell=[[20,0,0],[0,20,0],[0,0,20]])


dimer.set_calculator(model.calculator)
    
p = dimer.get_positions()
e = []
rr = []

for r in np.arange(1.2,6.0,0.1):
    p[1,2] = r
    dimer.set_positions(p)
    e.append(dimer.get_potential_energy())
    rr.append(r)

properties = {'dimer distance':rr, 'dimer energy': e}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'dimer energy': [-2281860.036096203, -533036.6645446187, -116322.77608103953, -23454.82156419098, -4434.0668575292975, -943.6239113199578, -392.191643619141, -322.4774681985024, -316.7162402241398, -316.8312732330784, -317.0390401273777, -317.0991708236144, -317.0674226650178, -316.98144404491757, -316.8645151884785, -316.7300930880442, -316.58893036614546, -316.4523862071746, -316.3307750392262, -316.2305198554688, -316.1529544923875, -316.0951557447589, -316.0518411841856, -316.0172753068892, -315.9865883336704, -315.95638426769926, -315.9247899589849, -315.89118049061534, -315.855786076208, -315.8193144720959, -315.7826542364182, -315.7466754095351, -315.7121169376513, -315.67953926475536, -315.64931958342316, -315.62167108079575, -315.5966727795038, -315.574301463998, -315.5544609848718, -315.53700684564643, -315.5217655806665, -315.5085492972442, -315.4971661326556, -315.4874274653915, -315.4791526585259, -315.4721719886441, -315.46632827639263, -315.46147760930285], 'dimer distance': ['1.2', '1.3', '1.4000000000000001', '1.5000000000000002', '1.6000000000000003', '1.7000000000000004', '1.8000000000000005', '1.9000000000000006', '2.000000000000001', '2.1000000000000005', '2.200000000000001', '2.3000000000000007', '2.4000000000000012', '2.500000000000001', '2.6000000000000014', '2.700000000000001', '2.8000000000000016', '2.9000000000000012', '3.0000000000000018', '3.1000000000000014', '3.200000000000002', '3.3000000000000016', '3.400000000000002', '3.5000000000000018', '3.6000000000000023', '3.700000000000002', '3.8000000000000025', '3.900000000000002', '4.000000000000003', '4.100000000000002', '4.200000000000003', '4.3000000000000025', '4.400000000000003', '4.500000000000003', '4.600000000000003', '4.700000000000003', '4.800000000000003', '4.900000000000003', '5.0000000000000036', '5.100000000000003', '5.200000000000004', '5.300000000000003', '5.400000000000004', '5.500000000000004', '5.600000000000004', '5.700000000000004', '5.800000000000004', '5.900000000000005']}
============================================================
