Model PIP_IP4+Env+Reg, Test fourfold-defect-small-GAP_traj_eval
Test run at 2018-08-31 16:11

model file: ../../../models/Si/PIP_IP4+Env+Reg/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/Si_IP4+Env+Reg.jld2")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/Si/fourfold-defect-small-GAP_traj_eval/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines

import ase.io, os

# set of utility routines specific this this model/testing framework

# the current model
import model

ats = ase.io.read(os.path.join(os.path.dirname(__file__),"model-GAP-6-test-fourfold-defect.opt.xyz"),":")
Es = []
for at in ats:
    # e0 = at.get_potential_energy()
    e0 = 0.0
    at.set_calculator(model.calculator)
    e = at.get_potential_energy()
    Es.append((e0, e))
properties = {'E_orig_E' : Es}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'E_orig_E': [(0.0, -10440.66493214833), (0.0, -10440.678797582996), (0.0, -10440.706897765253), (0.0, -10440.70924249649), (0.0, -10440.712875389687), (0.0, -10440.715189819268), (0.0, -10440.715863447582), (0.0, -10440.717617492612), (0.0, -10440.719589959024), (0.0, -10440.71678003062), (0.0, -10440.713947043037), (0.0, -10440.698457243096), (0.0, -10440.66081689447), (0.0, -10440.617314070729), (0.0, -10440.622386561234), (0.0, -10440.62975285776), (0.0, -10440.635685251638), (0.0, -10440.631904161932), (0.0, -10440.624774148611), (0.0, -10440.619042457294), (0.0, -10440.653248018241), (0.0, -10440.706421471572), (0.0, -10440.757333474436), (0.0, -10440.798399094585), (0.0, -10440.837772930105), (0.0, -10440.877939523922), (0.0, -10440.919652535194), (0.0, -10440.962720182357), (0.0, -10441.006637306238), (0.0, -10441.05082838153), (0.0, -10441.094672705492), (0.0, -10441.13795789745), (0.0, -10441.181630709536), (0.0, -10441.228678873204), (0.0, -10441.284765821962), (0.0, -10441.358163816605), (0.0, -10441.459530892631), (0.0, -10441.60104776187), (0.0, -10441.794492070414), (0.0, -10442.044828331367), (0.0, -10442.332369102773), (0.0, -10442.591113613964), (0.0, -10442.876404666777), (0.0, -10442.93200490075), (0.0, -10443.0203591627), (0.0, -10443.104535289525), (0.0, -10443.124357682991), (0.0, -10443.161576311966), (0.0, -10443.192279017594), (0.0, -10443.212366381036), (0.0, -10443.225429380622), (0.0, -10443.240318023958), (0.0, -10443.245021366232), (0.0, -10443.251397322932), (0.0, -10443.253763157198), (0.0, -10443.25867817929), (0.0, -10443.26040900011), (0.0, -10443.262385310372), (0.0, -10443.262965105232), (0.0, -10443.264122456874), (0.0, -10443.265665226232), (0.0, -10443.265739573551), (0.0, -10443.266163671204), (0.0, -10443.266701027731), (0.0, -10443.267486496381), (0.0, -10443.267726308019), (0.0, -10443.26796921346), (0.0, -10443.268039222572), (0.0, -10443.268058048954), (0.0, -10443.268064503038), (0.0, -10443.268075783566), (0.0, -10443.268091446289), (0.0, -10443.268109230165), (0.0, -10443.268113338087), (0.0, -10443.268117421028), (0.0, -10443.268118189782), (0.0, -10443.268119591632), (0.0, -10443.26812045221), (0.0, -10443.268121516872), (0.0, -10443.26812045221), (0.0, -10443.268121516872)]}
============================================================
