Model GAP, Test dimer
Test run at 2018-08-31 15:57

model file: ../../../models/Si/GAP/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2017_6_17_60_4_3_56_165"',
                                               param_filename='gp_iter6_sparse9k.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2017_6_17_60_4_3_56_165"',
                                               param_filename='gp_iter6_sparse9k.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Si/dimer/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

from ase import Atoms
import model
import numpy as np

dimer = Atoms('Si2',
               positions=[[0, 0, 0],
                          [0, 0, 1.5]], cell=[[20,0,0],[0,20,0],[0,0,20]])


dimer.set_calculator(model.calculator)
    
p = dimer.get_positions()
e = []
rr = []
for r in np.arange(1.2,6.0,0.1):
    p[1,2] = r
    dimer.set_positions(p)
    e.append(dimer.get_potential_energy())
    rr.append(r)

properties = {'dimer distance':rr, 'dimer energy': e}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'dimer energy': [-291.57707730312865, -299.2740967095659, -305.51271239178516, -310.1285995006379, -313.8142067454219, -316.43181162814585, -318.1854510374296, -319.3406437479791, -320.0802875976482, -320.5740698117318, -320.8973046026215, -321.07783450626715, -321.1229736297577, -321.02730137809164, -320.7741409694809, -320.34379188148165, -319.73490281448153, -318.98386320916387, -318.16455089577613, -317.3653725001824, -316.6595918151988, -316.08836048449103, -315.66195368438537, -315.3700685577102, -315.19050686091697, -315.0939249775133, -315.0482022541143, -315.024196149761, -315.00090838912445, -315.02562967493907, -315.16307908586504, -315.41478653081765, -315.75070409885797, -316.11571451565766, -316.4555222732809, -316.7339493612455, -316.9341329354565, -317.05197856578866, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235, -317.08993400804235], 'dimer distance': ['1.2', '1.3', '1.4000000000000001', '1.5000000000000002', '1.6000000000000003', '1.7000000000000004', '1.8000000000000005', '1.9000000000000006', '2.000000000000001', '2.1000000000000005', '2.200000000000001', '2.3000000000000007', '2.4000000000000012', '2.500000000000001', '2.6000000000000014', '2.700000000000001', '2.8000000000000016', '2.9000000000000012', '3.0000000000000018', '3.1000000000000014', '3.200000000000002', '3.3000000000000016', '3.400000000000002', '3.5000000000000018', '3.6000000000000023', '3.700000000000002', '3.8000000000000025', '3.900000000000002', '4.000000000000003', '4.100000000000002', '4.200000000000003', '4.3000000000000025', '4.400000000000003', '4.500000000000003', '4.600000000000003', '4.700000000000003', '4.800000000000003', '4.900000000000003', '5.0000000000000036', '5.100000000000003', '5.200000000000004', '5.300000000000003', '5.400000000000004', '5.500000000000004', '5.600000000000004', '5.700000000000004', '5.800000000000004', '5.900000000000005']}
============================================================
