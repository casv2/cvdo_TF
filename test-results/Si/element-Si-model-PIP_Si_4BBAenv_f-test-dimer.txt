Model PIP_Si_4BBAenv_f, Test dimer
Test run at 2018-11-04 14:14

model file: ../../../models/Si/PIP_Si_4BBAenv_f/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/SiPIP_4BBA_env_sw3_f.json")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/Si/dimer/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

from ase import Atoms
from ase.lattice.cubic import Diamond
import model
import numpy as np

single_atom = Atoms('Si', cell=[[20,0,0],[0,20,0],[0,0,20]])
single_atom.set_calculator(model.calculator)
e0 = single_atom.get_potential_energy()

a0 = (20.0*8)**(1.0/3.0) 
bulk = Diamond(symbol='Si', latticeconstant=a0)
rnn = np.linalg.norm(bulk.positions[1])

dimer = Atoms('Si2',
               positions=[[0, 0, 0],
                          [0, 0, 1.5]], cell=[[20,0,0],[0,20,0],[0,0,20]])


dimer.set_calculator(model.calculator)
    
p = dimer.get_positions()
e = []
rr = []

for r in np.arange(1.2,6.0,0.1):
    p[1,2] = r
    dimer.set_positions(p)
    e.append(dimer.get_potential_energy() - (2*e0))
    rr.append(r)

properties = {'dimer distance': rr, 'dimer energy': e, 'rnn': rnn}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'dimer energy': [8.667498121410781e+19, 4.6441275240985395e+17, 3353162138512678.0, 29599060375342.13, 286883903573.60156, 2672968216.559238, 19725898.19491983, 79684.18627751149, 39.85430509127275, -3.771300149191461, -3.6773720654140334, -3.5090791332016806, -3.275112801272712, -3.037345161702774, -2.861611531622998, -2.773180063156701, -2.7148237062332328, -2.619430692529363, -2.453705476812843, -2.207529213699104, -1.8898004328851812, -1.5332043464790104, -1.1857778892839406, -0.8908101020604136, -0.6691848009314185, -0.5150479893976012, -0.4202807536286173, -0.3839148271775912, -0.38837996443669454, -0.41617567375703857, -0.4521830272109355, -0.4835337420348651, -0.5003241838979875, -0.496610239407687, -0.47093947852170004, -0.4260338908837866, -0.3676872613262958, -0.3032294188282094, -0.2399780753343066, -0.18400750485614026, -0.13940405121445565, -0.10802555624684373, -0.08967499003244939, -0.08254721037144463, -0.0838025965002771, -0.09014567144356533, -0.0983244314733156, -0.10550469697557219], 'dimer distance': ['1.2', '1.3', '1.4000000000000001', '1.5000000000000002', '1.6000000000000003', '1.7000000000000004', '1.8000000000000005', '1.9000000000000006', '2.000000000000001', '2.1000000000000005', '2.200000000000001', '2.3000000000000007', '2.4000000000000012', '2.500000000000001', '2.6000000000000014', '2.700000000000001', '2.8000000000000016', '2.9000000000000012', '3.0000000000000018', '3.1000000000000014', '3.200000000000002', '3.3000000000000016', '3.400000000000002', '3.5000000000000018', '3.6000000000000023', '3.700000000000002', '3.8000000000000025', '3.900000000000002', '4.000000000000003', '4.100000000000002', '4.200000000000003', '4.3000000000000025', '4.400000000000003', '4.500000000000003', '4.600000000000003', '4.700000000000003', '4.800000000000003', '4.900000000000003', '5.0000000000000036', '5.100000000000003', '5.200000000000004', '5.300000000000003', '5.400000000000004', '5.500000000000004', '5.600000000000004', '5.700000000000004', '5.800000000000004', '5.900000000000005'], 'rnn': '2.350754612451197'}
============================================================
