Model PIP_IP4+Env+Reg, Test dimer
Test run at 2018-08-31 16:11

model file: ../../../models/Si/PIP_IP4+Env+Reg/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/Si_IP4+Env+Reg.jld2")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/Si/dimer/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

from ase import Atoms
import model
import numpy as np

dimer = Atoms('Si2',
               positions=[[0, 0, 0],
                          [0, 0, 1.5]], cell=[[20,0,0],[0,20,0],[0,0,20]])


dimer.set_calculator(model.calculator)
    
p = dimer.get_positions()
e = []
rr = []
for r in np.arange(1.2,6.0,0.1):
    p[1,2] = r
    dimer.set_positions(p)
    e.append(dimer.get_potential_energy())
    rr.append(r)

properties = {'dimer distance':rr, 'dimer energy': e}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'dimer energy': [-318.5024367266851, -319.32402549510607, -319.896154133967, -320.27591839284514, -320.5054621172733, -320.62115887404946, -320.6474378775232, -320.6007143762679, -320.4945790829633, -320.33995372126753, -320.1436614001701, -319.9084879083754, -319.6348020745616, -319.3228543798702, -318.97504847692113, -318.5975996697847, -318.2010757489642, -317.7996196734598, -317.409106747349, -317.0448319187156, -316.7193940288681, -316.4412673083838, -316.2142597842728, -316.03778956157686, -315.9077412341201, -315.81760982840575, -315.75967139649555, -315.72599660235704, -315.7092104294409, -315.702974542625, -315.7022190574342, -315.703177159501, -315.7032839380028, -315.700996341727, -315.69558023033056, -315.68689751445504, -315.67521416931856, -315.6610399024833, -315.64500291045135, -315.62775832512455, -315.60992767556814, -315.59207809786034, -315.57466194114227, -315.56070722407304, -315.5521185626288, -315.546998240411, -315.5439080566301, -315.541659724913], 'dimer distance': ['1.2', '1.3', '1.4000000000000001', '1.5000000000000002', '1.6000000000000003', '1.7000000000000004', '1.8000000000000005', '1.9000000000000006', '2.000000000000001', '2.1000000000000005', '2.200000000000001', '2.3000000000000007', '2.4000000000000012', '2.500000000000001', '2.6000000000000014', '2.700000000000001', '2.8000000000000016', '2.9000000000000012', '3.0000000000000018', '3.1000000000000014', '3.200000000000002', '3.3000000000000016', '3.400000000000002', '3.5000000000000018', '3.6000000000000023', '3.700000000000002', '3.8000000000000025', '3.900000000000002', '4.000000000000003', '4.100000000000002', '4.200000000000003', '4.3000000000000025', '4.400000000000003', '4.500000000000003', '4.600000000000003', '4.700000000000003', '4.800000000000003', '4.900000000000003', '5.0000000000000036', '5.100000000000003', '5.200000000000004', '5.300000000000003', '5.400000000000004', '5.500000000000004', '5.600000000000004', '5.700000000000004', '5.800000000000004', '5.900000000000005']}
============================================================
