Model PIP_Si_4BBAenv_sw3, Test 111_layer_test
Test run at 2018-10-24 11:43

model file: ../../../models/Si/PIP_Si_4BBAenv_sw3/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/SiPIP_4BBA_env_sw3.json")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/Si/111_layer_test/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines

import ase.io, os

# set of utility routines specific this this model/testing framework

# the current model
import model

ats = ase.io.read(os.path.join(os.path.dirname(__file__),"111_layers.xyz"),":")
Es = []
for at in ats:
    # e0 = at.get_potential_energy()
    e0 = 0.0
    at.set_calculator(model.calculator)
    e = at.get_potential_energy()
    Es.append((e0, e))
properties = {'E_orig_E' : Es}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'E_orig_E': [(0.0, -978.9002012039529), (0.0, -978.8955321000332), (0.0, -978.8814678268475), (0.0, -978.8592832417103), (0.0, -978.8298605514536), (0.0, -978.7941509220519), (0.0, -978.7531727810215), (0.0, -978.7074012695086), (0.0, -978.6574496199718), (0.0, -978.6040057202168), (0.0, -978.5472034144664), (0.0, -978.4875209787823), (0.0, -978.4252389690309), (0.0, -978.3605941510326), (0.0, -978.2940996555318), (0.0, -978.2259702118135), (0.0, -978.1567846445793), (0.0, -978.0866136232294), (0.0, -978.0158351523123), (0.0, -977.9439291254281), (0.0, -977.8710589367711), (0.0, -977.7974154464398), (0.0, -977.7229113720736), (0.0, -977.6478926282344), (0.0, -977.5723890976642), (0.0, -977.496533292012), (0.0, -977.4207848741072), (0.0, -977.345237172156), (0.0, -977.2697119272627), (0.0, -977.1944324454946), (0.0, -977.1194418914905), (0.0, -977.0446441866708), (0.0, -976.9699889315677), (0.0, -976.8954843964034), (0.0, -976.8209475509126), (0.0, -976.7464809004962), (0.0, -976.6716372700855), (0.0, -976.5960213092466), (0.0, -976.51997570933), (0.0, -976.4436311266849), (0.0, -976.3667911579357), (0.0, -976.2895627281653), (0.0, -976.2119358558749), (0.0, -976.1339400029334), (0.0, -976.0554742734806), (0.0, -975.9765028640635), (0.0, -975.897009714539), (0.0, -975.817030519978), (0.0, -975.7364686365734), (0.0, -975.6553119967523), (0.0, -975.5736325025058), (0.0, -975.49164920377), (0.0, -975.4098127730781), (0.0, -975.3282999704043), (0.0, -975.2474162656155), (0.0, -975.1674209692261), (0.0, -975.0887209386476), (0.0, -975.011692074951), (0.0, -974.936712061812), (0.0, -974.864338527002), (0.0, -974.7951107480237), (0.0, -974.7296520212249), (0.0, -974.6686183689883), (0.0, -974.6125677984298), (0.0, -974.5617096483898), (0.0, -974.5154226224693), (0.0, -974.4738017211976), (0.0, -974.436790655771), (0.0, -974.404244522584), (0.0, -974.3755524726741), (0.0, -974.3502134884079), (0.0, -974.3276767712193), (0.0, -974.3076593739496), (0.0, -974.2899193559615), (0.0, -974.2745005616032), (0.0, -974.2613887975506), (0.0, -974.2503558966513), (0.0, -974.2415745382162), (0.0, -974.2349295098699), (0.0, -974.2302664147433), (0.0, -974.2276273119561), (0.0, -974.2268066846975), (0.0, -974.2277817324664), (0.0, -974.2304929902098), (0.0, -974.2347620718797), (0.0, -974.24055002514), (0.0, -974.2476995307084), (0.0, -974.2559437795314), (0.0, -974.2650836415756), (0.0, -974.274968409286), (0.0, -974.2854170359215), (0.0, -974.2963974018506), (0.0, -974.3077636577515), (0.0, -974.319329052975), (0.0, -974.3311282307176), (0.0, -974.3428435081411), (0.0, -974.354601844246), (0.0, -974.3661184012618), (0.0, -974.3773477977765), (0.0, -974.3881980053397)]}
============================================================
