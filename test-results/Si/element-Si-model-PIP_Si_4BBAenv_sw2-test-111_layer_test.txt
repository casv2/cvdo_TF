Model PIP_Si_4BBAenv_sw2, Test 111_layer_test
Test run at 2018-10-24 09:47

model file: ../../../models/Si/PIP_Si_4BBAenv_sw2/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/SiPIP_4BBA_env_sw2.json")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/Si/111_layer_test/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines

import ase.io, os

# set of utility routines specific this this model/testing framework

# the current model
import model

ats = ase.io.read(os.path.join(os.path.dirname(__file__),"111_layers.xyz"),":")
Es = []
for at in ats:
    # e0 = at.get_potential_energy()
    e0 = 0.0
    at.set_calculator(model.calculator)
    e = at.get_potential_energy()
    Es.append((e0, e))
properties = {'E_orig_E' : Es}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'E_orig_E': [(0.0, -978.5677609843582), (0.0, -978.5673684985821), (0.0, -978.5574510504412), (0.0, -978.5391928240332), (0.0, -978.5137530401431), (0.0, -978.481904325073), (0.0, -978.4444212292489), (0.0, -978.4020614657245), (0.0, -978.3552606803128), (0.0, -978.3045330745822), (0.0, -978.250244173392), (0.0, -978.1927361051974), (0.0, -978.1324947097089), (0.0, -978.0698305399817), (0.0, -978.0050772534998), (0.0, -977.9386269265748), (0.0, -977.8707795581174), (0.0, -977.8018129779636), (0.0, -977.7319882920277), (0.0, -977.661287691042), (0.0, -977.5898058798182), (0.0, -977.5177296358615), (0.0, -977.4452454766141), (0.0, -977.3724800719497), (0.0, -977.2995259177366), (0.0, -977.2266173257786), (0.0, -977.1540459583426), (0.0, -977.0817444817745), (0.0, -977.0099402557017), (0.0, -976.9386205141742), (0.0, -976.8678228316313), (0.0, -976.7975587312136), (0.0, -976.7277962408772), (0.0, -976.6585373914597), (0.0, -976.5897234157801), (0.0, -976.5212619325097), (0.0, -976.4527572179788), (0.0, -976.383835064544), (0.0, -976.3147875495811), (0.0, -976.2457300954122), (0.0, -976.1766222067216), (0.0, -976.1075116913768), (0.0, -976.0383757594021), (0.0, -975.9691497887877), (0.0, -975.8999050949237), (0.0, -975.8304939218776), (0.0, -975.7609255155971), (0.0, -975.6912245698344), (0.0, -975.6213132758191), (0.0, -975.5511986630195), (0.0, -975.480892643314), (0.0, -975.4107763025667), (0.0, -975.3413272242751), (0.0, -975.2726983535616), (0.0, -975.2051196096065), (0.0, -975.1387013797812), (0.0, -975.0737855262195), (0.0, -975.0106780049499), (0.0, -974.9496030236613), (0.0, -974.8910054789452), (0.0, -974.8352789709037), (0.0, -974.7828246604714), (0.0, -974.7341985131487), (0.0, -974.6898211558588), (0.0, -974.6496708363599), (0.0, -974.6129236704083), (0.0, -974.5794910207915), (0.0, -974.549434885785), (0.0, -974.5225394034303), (0.0, -974.498489567186), (0.0, -974.47694186615), (0.0, -974.4575808342945), (0.0, -974.4402102770703), (0.0, -974.4246997881412), (0.0, -974.4110864463161), (0.0, -974.3993568461427), (0.0, -974.3894707995377), (0.0, -974.3813915168139), (0.0, -974.3751239611702), (0.0, -974.3705815639591), (0.0, -974.3677200605684), (0.0, -974.3664993983284), (0.0, -974.3668530255039), (0.0, -974.3686676446785), (0.0, -974.3719449926255), (0.0, -974.3765769639145), (0.0, -974.3824057647279), (0.0, -974.3893278255098), (0.0, -974.3971761046058), (0.0, -974.4058140457474), (0.0, -974.415187627644), (0.0, -974.4251146361752), (0.0, -974.4355227059128), (0.0, -974.4463400996427), (0.0, -974.4574270251428), (0.0, -974.4686958269187), (0.0, -974.4800213488822), (0.0, -974.4913704626935), (0.0, -974.502625853844), (0.0, -974.5137086130202)]}
============================================================
