Model GAP, Test bulk_hex_diamond
Test run at 2018-08-31 15:57

model file: ../../../models/Si/GAP/model.py
============================================================
import os

from quippy import Potential
import __builtin__

orig_dir = os.getcwd()
model_dir = os.path.dirname(__file__)
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    if hasattr(__builtin__, 'mpi_glob'):
        calculator = Potential(init_args='Potential xml_label="GAP_2017_6_17_60_4_3_56_165"',
                                               param_filename='gp_iter6_sparse9k.xml', mpi_obj=mpi_glob)
    else:
        calculator = Potential(init_args='Potential xml_label="GAP_2017_6_17_60_4_3_56_165"',
                                               param_filename='gp_iter6_sparse9k.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)

no_checkpoint = True

name = 'GAP'
============================================================
test file: ../../../tests/Si/bulk_hex_diamond/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
import ase.io, os
from math import sqrt

import lattice_tetragonal

# the current model
import model 

v0 = 20.0

# set up the a
bulk = ase.io.read(os.path.join(os.path.dirname(__file__),"hex_diamond.extxyz"))

cell_factor = (len(bulk)*v0/bulk.get_volume())**(1.0/3.0)
bulk.set_cell(bulk.get_cell()*cell_factor, scale_atoms=True)

(E_vs_V) = lattice_tetragonal.do_lattice(bulk, elastic=False)

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'hex_diamond_E_vs_V': E_vs_V }
============================================================
unrelaxed bulk
4
Lattice="1.9193831017808074 -3.324469053084449 0.0 1.9193831017808074 3.324469053084449 0.0 0.0 0.0 6.268678975816093" Properties=species:S:1:pos:R:3:Z:I:1 cutoff=-1.0 nneightol=1.2 pbc="T T T"
Si       1.91938310       1.10815635       0.39179244       14 
Si       1.91938310      -1.10815635       3.52613192       14 
Si       1.91938310       1.10815635       2.74254705       14 
Si       1.91938310      -1.10815635      -0.39179244       14 
relax_atoms_cell using method lbfgs_precon
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
PreconLBFGS:   0  15:58:41     -652.662166       0.1207       0.0211
{'info': {'cutoff': -1.0, 'nneightol': 1.2}, '_celldisp': array([[0.],
       [0.],
       [0.]]), '_calc': <utilities.SymmetrizedCalculator instance at 0x11bfe1ab8>, 'arrays': {'positions': array([[ 1.9193831 ,  1.10815635,  0.39179244],
       [ 1.9193831 , -1.10815635,  3.52613192],
       [ 1.9193831 ,  1.10815635,  2.74254705],
       [ 1.9193831 , -1.10815635, -0.39179244]]), 'numbers': array([14, 14, 14, 14])}, '_pbc': array([ True,  True,  True]), '_cell': array([[ 1.9193831 , -3.32446905,  0.        ],
       [ 1.9193831 ,  3.32446905,  0.        ],
       [ 0.        ,  0.        ,  6.26867898]]), '_constraints': []}
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.00 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=2.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): got r_NN=2.351 in 0.012629032135 s
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0105240345001 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000231027603149 s ---
INFO:ase.optimize.precon:--- remove zeros in 9.60826873779e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00115990638733 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00171494483948 s ---
INFO:ase.optimize.precon:mu (0.166) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=9.464631227059428
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0135979652405 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.00991797447205 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 7.89165496826e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 6.8187713623e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000697135925293 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.016569852829 s ---
INFO:ase.optimize.precon:--- Precon created in 0.0420269966125 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.00186014175415 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = False
INFO:ase.utils.linesearcharmijo:a1 = 0.607, suff_dec = True
PreconLBFGS:   1  15:58:45     -652.670448       0.1253       0.0050
{'info': {'cutoff': -1.0, 'nneightol': 1.2}, '_celldisp': array([[0.],
       [0.],
       [0.]]), '_calc': <utilities.SymmetrizedCalculator instance at 0x11bfe1ab8>, 'arrays': {'positions': array([[ 1.92297036,  1.11022745,  0.38670414],
       [ 1.92297036, -1.11022745,  3.54228938],
       [ 1.92297036,  1.11022745,  2.76888112],
       [ 1.92297036, -1.11022745, -0.38670414]]), 'numbers': array([14, 14, 14, 14])}, '_pbc': array([ True,  True,  True]), '_cell': array([[ 1.92297036e+00, -3.33068236e+00,  4.20401472e-34],
       [ 1.92297036e+00,  3.33068236e+00, -1.68160589e-33],
       [-2.05953819e-33, -1.98179155e-33,  6.31117050e+00]]), '_constraints': []}
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0114409923553 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000211000442505 s ---
INFO:ase.optimize.precon:--- remove zeros in 7.60555267334e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000797986984253 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00118279457092 s ---
INFO:ase.optimize.precon:mu (-0.192) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=22.243422296144377
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000241041183472 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000201940536499 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 5.88893890381e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 6.48498535156e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00067400932312 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00116205215454 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00335383415222 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000241041183472 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   2  15:58:47     -652.672840       0.0441       0.0026
{'info': {'cutoff': -1.0, 'nneightol': 1.2}, '_celldisp': array([[0.],
       [0.],
       [0.]]), '_calc': <utilities.SymmetrizedCalculator instance at 0x11bfe1ab8>, 'arrays': {'positions': array([[ 1.92685709,  1.11247146,  0.39709648],
       [ 1.92685709, -1.11247146,  3.57016535],
       [ 1.92685709,  1.11247146,  2.77597239],
       [ 1.92685709, -1.11247146, -0.39709648]]), 'numbers': array([14, 14, 14, 14])}, '_pbc': array([ True,  True,  True]), '_cell': array([[ 1.92685709e+00, -3.33741438e+00,  6.92308601e-34],
       [ 1.92685709e+00,  3.33741438e+00, -2.78854603e-33],
       [-3.42376043e-33, -3.28243608e-33,  6.34613774e+00]]), '_constraints': []}
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0107460021973 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000233888626099 s ---
INFO:ase.optimize.precon:--- remove zeros in 7.60555267334e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000972986221313 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00144004821777 s ---
INFO:ase.optimize.precon:mu (-0.506) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=30.94679344617128
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0153949260712 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000399112701416 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 0.00441598892212 s ---
INFO:ase.optimize.precon:--- remove zeros in 9.60826873779e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00126600265503 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00192999839783 s ---
INFO:ase.optimize.precon:--- Precon created in 0.0273370742798 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000355958938599 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   3  15:58:49     -652.673226       0.0015       0.0008
{'info': {'cutoff': -1.0, 'nneightol': 1.2}, '_celldisp': array([[0.],
       [0.],
       [0.]]), '_calc': <utilities.SymmetrizedCalculator instance at 0x11bfe1ab8>, 'arrays': {'positions': array([[ 1.92554295,  1.11171274,  0.39450661],
       [ 1.92554295, -1.11171274,  3.56343259],
       [ 1.92554295,  1.11171274,  2.77441938],
       [ 1.92554295, -1.11171274, -0.39450661]]), 'numbers': array([14, 14, 14, 14])}, '_pbc': array([ True,  True,  True]), '_cell': array([[ 1.92554295e+00, -3.33513823e+00,  1.86783720e-33],
       [ 1.92554295e+00,  3.33513823e+00, -1.26043243e-33],
       [ 9.56592033e-34, -2.95064967e-33,  6.33785197e+00]]), '_constraints': []}
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0116560459137 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000305891036987 s ---
INFO:ase.optimize.precon:--- remove zeros in 9.60826873779e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000952005386353 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00126719474792 s ---
INFO:ase.optimize.precon:mu (-0.427) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=28.812188812661365
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0154931545258 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000326871871948 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 9.10758972168e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 9.89437103271e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00108408927917 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00144791603088 s ---
INFO:ase.optimize.precon:--- Precon created in 0.0201449394226 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000323057174683 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   4  15:58:52     -652.673249       0.0022       0.0006
{'info': {'cutoff': -1.0, 'nneightol': 1.2}, '_celldisp': array([[0.],
       [0.],
       [0.]]), '_calc': <utilities.SymmetrizedCalculator instance at 0x11bfe1ab8>, 'arrays': {'positions': array([[ 1.92522309,  1.11152807,  0.39460328],
       [ 1.92522309, -1.11152807,  3.56377059],
       [ 1.92522309,  1.11152807,  2.77456405],
       [ 1.92522309, -1.11152807, -0.39460328]]), 'numbers': array([14, 14, 14, 14])}, '_pbc': array([ True,  True,  True]), '_cell': array([[ 1.92522309e+00, -3.33458421e+00, -1.47450875e-21],
       [ 1.92522309e+00,  3.33458421e+00,  1.47450875e-21],
       [ 4.13521204e-33,  2.75884037e-21,  6.33833463e+00]]), '_constraints': []}
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0102682113647 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000217914581299 s ---
INFO:ase.optimize.precon:--- remove zeros in 7.48634338379e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00107502937317 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00142407417297 s ---
INFO:ase.optimize.precon:mu (-0.436) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=28.53652395764654
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.0105140209198 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.00151801109314 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 9.79900360107e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 0.000112056732178 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.00092887878418 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.00147294998169 s ---
INFO:ase.optimize.precon:--- Precon created in 0.0162599086761 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000288963317871 seconds ---
INFO:ase.utils.linesearcharmijo:a1 = 1.000, suff_dec = True
PreconLBFGS:   5  15:58:54     -652.673282       0.0005       0.0000
{'info': {'cutoff': -1.0, 'nneightol': 1.2}, '_celldisp': array([[0.],
       [0.],
       [0.]]), '_calc': <utilities.SymmetrizedCalculator instance at 0x11bfe1ab8>, 'arrays': {'positions': array([[ 1.92432234,  1.11100802,  0.39520384],
       [ 1.92432234, -1.11100802,  3.56578673],
       [ 1.92432234,  1.11100802,  2.77537906],
       [ 1.92432234, -1.11100802, -0.39520384]]), 'numbers': array([14, 14, 14, 14])}, '_pbc': array([ True,  True,  True]), '_cell': array([[ 1.92432234e+00, -3.33302406e+00,  1.95657082e-20],
       [ 1.92432234e+00,  3.33302406e+00, -1.95657082e-20],
       [-4.01682914e-32, -3.65961680e-20,  6.34116580e+00]]), '_constraints': []}
relaxed bulk
4
Lattice="1.9243223351931595 -3.333024056300919 1.9565708239732686e-20 1.9243223351931595 3.333024056300919 -1.9565708239757464e-20 -4.0168291356115375e-32 -3.6596168046694857e-20 6.3411657985198495" Properties=species:S:1:pos:R:3:Z:I:1:forces:R:3 stress="-1.4381575156823398e-05 -3.347509410761417e-21 1.0776033124170714e-32 -3.347509410761417e-21 -1.4381575142957308e-05 4.393121770106733e-21 1.0776033124170714e-32 4.393121770106733e-21 -4.3357545378835116e-05" cutoff=-1.0 energy=-652.67328248 nneightol=1.2 pbc="T T T"
Si       1.92432234       1.11100802       0.39520384       14       0.00000000      -0.00000000       0.00047318 
Si       1.92432234      -1.11100802       3.56578673       14      -0.00000000      -0.00000000       0.00047318 
Si       1.92432234       1.11100802       2.77537906       14      -0.00000000       0.00000000      -0.00047318 
Si       1.92432234      -1.11100802      -0.39520384       14       0.00000000       0.00000000      -0.00047318 
calculating elastic constants
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
calculating E vs. V
bulk going into E vs. V
4
Lattice="1.9243223351931595 -3.333024056300919 1.9565708239732686e-20 1.9243223351931595 3.333024056300919 -1.9565708239757464e-20 -4.0168291356115375e-32 -3.6596168046694857e-20 6.3411657985198495" Properties=species:S:1:pos:R:3:Z:I:1 cutoff=-1.0 nneightol=1.2 pbc="T T T"
Si       1.92432234       1.11100802       0.39520384       14 
Si       1.92432234      -1.11100802       3.56578673       14 
Si       1.92432234       1.11100802       2.77537906       14 
Si       1.92432234      -1.11100802      -0.39520384       14 
doing volume step 0
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 0
done evaluate step 0
EV  0 81.3420986418528 -652.67328248 [-1.43818324e-05 -1.43813179e-05 -4.33575454e-05  5.16307640e-16
  2.00466929e-18 -2.10063750e-18]
doing volume step -1
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step -1
done evaluate step -1
EV  -1 79.30849335560893 -652.657013589 [-1.63028444e-02 -1.63028439e-02 -1.63381287e-02  4.23269221e-16
 -1.13302715e-17 -5.81824752e-18]
doing volume step -2
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step -2
done evaluate step -2
EV  -2 77.27486705628988 -652.605637755 [-3.45356319e-02 -3.45356314e-02 -3.45287015e-02  7.64326577e-17
  1.25712950e-18  5.49994154e-19]
doing volume step -3
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step -3
done evaluate step -3
EV  -3 75.24124326733535 -652.515170703 [-5.48182536e-02 -5.48182532e-02 -5.48092123e-02  8.42535665e-17
  2.23174949e-16  3.24189681e-16]
doing volume step -4
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step -4
done evaluate step -4
EV  -4 73.20762400819578 -652.380936882 [-7.76893701e-02 -7.76893697e-02 -7.76912597e-02  1.09297507e-15
 -1.91367927e-16 -2.43053701e-17]
doing volume step -5
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step -5
done evaluate step -5
EV  -5 71.17401971624649 -652.196945589 [-1.03862413e-01 -1.03862412e-01 -1.03871671e-01 -3.75199670e-17
  4.34871417e-16 -2.12319185e-16]
doing volume step 1
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 1
done evaluate step 1
EV  1 83.3756289765226 -652.658593078 [ 1.40528088e-02  1.40528093e-02  1.40968840e-02 -1.56650378e-17
 -3.62806746e-18 -5.87772936e-18]
doing volume step 2
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 2
done evaluate step 2
EV  2 85.4091669865647 -652.618304273 [2.49209622e-02 2.49209627e-02 2.49249637e-02 1.12203828e-16
 4.97613156e-19 2.74499666e-17]
doing volume step 3
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 3
done evaluate step 3
EV  3 87.44272800864438 -652.559176052 [ 3.27456976e-02  3.27456982e-02  3.27513203e-02  3.05579774e-17
 -8.27261118e-18  1.14169970e-17]
doing volume step 4
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 4
done evaluate step 4
EV  4 89.476307497208 -652.487158503 [ 3.75782960e-02  3.75782965e-02  3.75549719e-02 -2.59876636e-16
 -6.78563112e-18  1.72548906e-18]
doing volume step 5
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 5
done evaluate step 5
EV  5 91.50969851917617 -652.407799351 [ 4.01683304e-02  4.01683309e-02  4.01761438e-02  9.75467413e-18
 -8.19886905e-17  1.23804543e-16]
doing volume step 6
relax_atoms_cell using method cg_n
symmetry.prep got symmetry group number 194 , international (Hermann-Mauguin) P6_3/mmc , Hall -P 6c 2c
WARNING:quippy.potential:Minim atoms is not quippy.Atoms instance, copy forced!
done relaxing step 6
done evaluate step 6
EV  6 93.54325368391046 -652.324553117 [ 4.15176231e-02  4.15176237e-02  4.15244036e-02 -4.44740974e-16
 -1.33420960e-16 -4.51149878e-16]
EV_final  17.793504929061623 -163.049236397
EV_final  18.301906002048945 -163.095234221
EV_final  18.810310816833837 -163.128792676
EV_final  19.31871676407247 -163.151409439
EV_final  19.827123338902233 -163.164253397
EV_final  20.3355246604632 -163.16832062
EV_final  20.84390724413065 -163.164648269
EV_final  21.352291746641175 -163.154576068
EV_final  21.860682002161095 -163.139794013
EV_final  22.369076874302 -163.121789626
EV_final  22.877424629794042 -163.101949838
EV_final  23.385813420977616 -163.081138279
============================================================
Property calculation output:


Summary of computed properties:
{'hex_diamond_E_vs_V': [('17.793504929061623', -163.0492363972347), ('18.301906002048945', -163.09523422055022), ('18.810310816833837', -163.12879267565006), ('19.31871676407247', -163.15140943879445), ('19.827123338902233', -163.16425339736543), ('20.3355246604632', -163.16832062007583), ('20.84390724413065', -163.16464826948632), ('21.352291746641175', -163.15457606816062), ('21.860682002161095', -163.13979401299727), ('22.369076874302', -163.12178962585352), ('22.877424629794042', -163.1019498376638), ('23.385813420977616', -163.08113827915233)]}
============================================================
