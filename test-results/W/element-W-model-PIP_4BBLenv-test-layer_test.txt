Model PIP_4BBLenv, Test layer_test
Test run at 2018-11-10 20:50

model file: ../../../models/W/PIP_4BBLenv/model.py
============================================================
import juliaimport
import julip
import os
import glob

"""
pwd = os.getcwd()


os.chdir(model_dir)

json_file = glob.glob("*.json")[0]

os.chdir(pwd)
"""

#IP = juliaimport.import_IP(model_dir + "/{0}".format(json_file))

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/W_4BBLenv_med.json")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/W/layer_test/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines

import ase.io, os

# set of utility routines specific this this model/testing framework

# the current model
import model

ats = ase.io.read(os.path.join(os.path.dirname(__file__),"bcc_layers.xyz"),":")
Es = []

for at in ats:
    at.set_calculator(model.calculator)
    e = at.get_potential_energy()/len(at)
    Es.append(e)

properties = {'E' : Es}
============================================================
============================================================
Property calculation output:


Summary of computed properties:
{'E': [-11.191642219080187, -11.19324392474731, -11.176897801798804, -11.146584696919824, -11.104174014441528, -11.049948837823326, -10.986445252204206, -10.915411404293382, -10.836396971475272, -10.752549162141143, -10.647249074523486, -10.55193251554859, -10.456776852179635, -10.36698984369668, -10.286357519160427, -10.208651436754506, -10.128728450994787, -10.045846026172278, -9.959554956101302, -9.869769821324484, -9.776980629506761, -9.682101907804332, -9.586484964362104, -9.491537680069573, -9.398115147875131, -9.307570309228268, -9.220747260812558, -9.138027230306411, -9.063072650277862, -9.011887897234086, -8.949602863463804, -8.891905139537274, -8.84248931925597, -8.801134283781373, -8.77112503112289, -8.754791411392612, -8.752694265342459, -8.76472099682781, -8.790006371030348, -8.826830411932196, -8.872201640846828, -8.922330840145973, -8.973329047677266, -9.021112731249248, -9.061952421797361, -9.093225358736452, -9.112404534306144, -9.109945131539, -9.079784334307988, -9.01284365834212, -8.90166053086261, -8.741187366984049, -8.528170557311384, -8.262882411099595, -7.95082383883376, -7.602779336554141, -7.234111107131907, -6.862602980345798, -6.505488485643311, -6.176043262371172, -5.861402307906229, -5.552246317735212, -5.248027889850014, -4.948448053709222, -4.653159354644277, -4.36196537354365, -4.075024777782556, -3.793067222831134, -3.5175697040392704, -3.250926326465364, -2.9965689721343467, -2.7578151504457526, -2.531099744815819, -2.315760478971126, -2.1119586937527193, -1.9198152066910044, -1.7394077680234674, -1.570765387512822, -1.413856464982121, -1.2670871009655964, -1.1260725010737533, -0.9912534533054901, -0.863281771100568, -0.742679476143428, -0.629874154228831, -0.5252476253740137, -0.42916470916137384, -0.3419993499670603, -0.2641753001069611, -0.19616298528173406, -0.13837462963971164, -0.07447429231985012, 0.000871945591496559, 0.04788976296522013, 0.0770530511735828, 0.09378003422062078, 0.09738862548601018, 0.08721558035715082, 0.06270027120119168, 0.023430695894672143]}
============================================================
