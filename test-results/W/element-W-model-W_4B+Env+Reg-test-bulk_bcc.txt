Model W_4B+Env+Reg, Test bulk_bcc
Test run at 2018-09-06 12:14

model file: ../../../models/W/W_4B+Env+Reg/model.py
============================================================
import juliaimport
import julip
import os

model_dir = os.path.dirname(os.path.realpath(__file__))
IP = juliaimport.import_IP(model_dir + "/W-PIP-B4+Env+Reg.jld2")

#IP = juliaimport.import_IP(os.path.realpath(__file__)[0:-8] + "Ti_4B_med.json")
ASE_IP = julip.JulipCalculator("IP")

calculator = ASE_IP

no_checkpoint = True

name = 'PIP'
============================================================
test file: ../../../tests/W/bulk_bcc/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS: 
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.cubic import BodyCenteredCubic

import lattice_cubic

# the current model
import model 

a0 = 3.16 # initial guess at lattice constant, cell will be relaxed below

# set up the a
bulk = BodyCenteredCubic(symbol='W', latticeconstant=a0)

(c11, c12, c44, E_vs_V) = lattice_cubic.do_lattice(bulk, elastic=True)

#properties = {'bcc_E_vs_V': E_vs_V }

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'bcc_c11': c11, 'bcc_c12': c12, 'bcc_c44': c44, 'bcc_E_vs_V': E_vs_V }
============================================================
relax_atoms_cell using method lbfgs_precon
symmetry.prep: symmetry group number 229 , international (Hermann-Mauguin) Im-3m , Hall -I 4 2 3
WARNING:ase.optimize.precon:use_pyamg=True but PyAMG cannot be imported! falling back on direct inversion of preconditioner, may be slow for large systems
[[-3.85183074e-02  3.26235924e-14  2.90287837e-14]
 [ 3.32163654e-14 -3.85183074e-02  2.05474831e-14]
 [ 2.93547883e-14  2.06262613e-14 -3.85183074e-02]]
[[-3.85183074e-02  3.26235924e-14  2.90287837e-14]
 [ 3.32163654e-14 -3.85183074e-02  2.05474831e-14]
 [ 2.93547883e-14  2.06262613e-14 -3.85183074e-02]]
[[-3.85183074e-02  3.26235924e-14  2.90287837e-14]
 [ 3.32163654e-14 -3.85183074e-02  2.05474831e-14]
 [ 2.93547883e-14  2.06262613e-14 -3.85183074e-02]]
PreconLBFGS:   0  12:16:18      -22.380837       0.0000       0.0385
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.00 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=1.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=2.62 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): calling neighbour_list with r_cut=4.24 A
INFO:ase.optimize.precon:estimate_nearest_neighbour_distance(): got r_NN=2.737 in 0.0011100769043 s
[[-0.00879601 -0.00013094 -0.00013094]
 [-0.00013094 -0.00879601 -0.00013094]
 [-0.00013094 -0.00013094 -0.00879601]]
[[-0.00879601 -0.00013094 -0.00013094]
 [-0.00013094 -0.00879601 -0.00013094]
 [-0.00013094 -0.00013094 -0.00879601]]
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=True, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000200033187866 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000169992446899 s ---
INFO:ase.optimize.precon:--- remove zeros in 5.88893890381e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000916004180908 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000955104827881 s ---
INFO:ase.optimize.precon:mu (0.000) < 1.0, capping at mu=1.0
INFO:ase.optimize.precon:estimate_mu(): mu=1.0, mu_c=46.754474547693036
INFO:ase.optimize.precon:creating sparse precon: initial_assembly=False, force_stab=False, apply_positions=True, apply_cell=True
INFO:ase.optimize.precon:--- neighbour list created in 0.000149011611938 s ---
INFO:ase.optimize.precon:adding stabilisation to preconditioner
INFO:ase.optimize.precon:--- computed triplet format in 0.000146150588989 s ---
INFO:ase.optimize.precon:--- applied fixed_atoms in 5.10215759277e-05 s ---
INFO:ase.optimize.precon:--- remove zeros in 4.88758087158e-05 s ---
INFO:ase.optimize.precon:--- created CSC matrix in 0.000539064407349 s ---
INFO:ase.optimize.precon:--- N-dim precon created in 0.000850915908813 s ---
INFO:ase.optimize.precon:--- Precon created in 0.00256896018982 seconds ---
INFO:ase.optimize.precon:--- Precon applied in 0.000285148620605 seconds ---
[[-3.85183073e-02 -3.80115224e-15  5.45053899e-14]
 [-2.75463906e-15 -3.85183073e-02  5.41490792e-14]
 [ 5.48830222e-14  6.90897215e-14 -3.85183073e-02]]
